function trial = pi_setup(trial);
% PI_SETUP initializes the graphical interface, but by default remains
% hidden from view.

global bDEBUGVISUAL mon_left

bDEBUG = bDEBUGVISUAL;

if nargin<1,
trial.ResponseList = {'Dopey','Grumpy','Doc','Happy','Bashful','Sneezy','Sleepy'};
trial.QuestionString = 'What question?';
trial.NChoices = length(trial.ResponseList);
trial.Nkey = cellstr(num2str([1:trial.NChoices]')); %{num2str([1:trial.NChoices])};
end

if bDEBUG,
    visiblestr = 'on';
else,
    visiblestr = 'off';
end

if isfield(trial,'fig'),
    if ishandle(trial.fig),
        delete(trial.fig);
    end
    if ishandle(trial.mainfig),
        delete(trial.mainfig);
    end
end

% Create a black background for the experiment
if bDEBUG,
    trial.mainfig = [];
else,
    trial.mainfig = figure('Menu','none','units','normalized','position',[mon_left+0 0 1 1],'color','k');
end

% Create the response dialog
trial.fig = figure('units','normalized',...
    'doublebuffer','on',...
    'position',[mon_left+0.2 0.2 0.6 0.6],...
    'BackingStore','off',...
    'HandleVisibility','callback',...
    'IntegerHandle','off',...
    'InvertHardcopy','off',...
    'MenuBar','none',...
    'NumberTitle','off',...
    'PaperPositionMode','auto',...
    'Resize','off',...
    'Visible',visiblestr,...
    'color',[0.3 0.3 0.35]);
%,...
%    'closerequestfcn','');
%    'WindowStyle','modal',...
centerfig(trial.fig,1);

for i0=1:length(trial.Nkey),
    trial.Nkey{i0} = deblank(trial.Nkey{i0});
end

% Create the response buttons
if ~isfield(trial,'breaks'),
    Ntiers = 1;
else,
    Ntiers = numel(trial.breaks)+1;
end

Spread = 0.9;
widthfrac = 0.05;
fontsize = 18;
for t0=1:Ntiers,
    if Ntiers == 1,
        start_id = 1;
        end_id = trial.NChoices;
    elseif t0 == 1
        start_id = 1;
        end_id = trial.breaks(t0)-1;
    elseif t0 == Ntiers
        start_id = trial.breaks(t0-1);
        end_id = trial.NChoices;
    else
        start_id = trial.breaks(t0-1);
        end_id = trial.breaks(t0)-1;
    end
    bottom = 0.5 - (t0-1)*0.1;
    width = Spread/(end_id-start_id+1)
    for ch0=start_id:end_id,
        pos = [(1-Spread)/2+width*(ch0-start_id)+widthfrac*width bottom (1-2*widthfrac)*width 0.05];
        trial.(sprintf('btn%s',trial.Nkey{ch0})) = uicontrol(trial.fig,...
            'units','normalized',...
            'position',pos,...
            'Fontsize',fontsize,...
            'Fontweight','bold',...
            'string',trial.ResponseList{ch0},...
            'visible',visiblestr,...
            'callback',sprintf('pi_trialcb(''response'',''%s'');',trial.Nkey{ch0}));
    end
end

% Create the question UIcontrol
trial.str01 = uicontrol(trial.fig,...
    'Style','text',...
    'Fontsize',fontsize,...
    'Fontweight','bold',...
    'units','normalized',...
    'ForegroundColor',[1 1 0],...
    'backgroundcolor',[0.3 0.3 0.35],...
    'position', [0.3 0.6 0.4 0.1],...
    'visible',visiblestr,...
    'string',trial.QuestionString);

% Create the repeat button
trial.repeat_btn = uicontrol(trial.fig,...
    'units','normalized',...
    'position',[0.4 0.3 0.2 0.05],...
    'Fontsize',fontsize,...
    'Fontweight','bold',...
    'string','Repeat (R)',...
    'visible',visiblestr,...
    'callback',sprintf('pi_trialcb(''repeat'');'));

% Create the next stimulus button
trial.next_btn = uicontrol(trial.fig,...
    'units','normalized',...
    'position',[0.65 0.3 0.2 0.05],...
    'Fontsize',fontsize,...
    'Fontweight','bold',...
    'string','Next',...
    'visible',visiblestr,...
    'callback',sprintf('pi_trialcb(''next'');'));
%    'position',[0.4 0.4 0.2 0.05],...

% Create the enable "next button" checkbox and the play delay slider. The
% play delay slider allows you to adjust the time between display and
% playback of each token.
trial.enable_next = uicontrol(trial.fig,...
    'style','checkbox',...
    'string','Enable Next Button',...
    'Value',1,...
    'units','normalized',...
    'visible',visiblestr,...
    'position',[0.05 0.05 0.2 0.05]);
trial.enable_repeat = uicontrol(trial.fig,...
    'style','checkbox',...
    'string','Enable Next Button',...
    'Value',1,...
    'units','normalized',...
    'visible',visiblestr,...
    'position',[0.05 0.1 0.2 0.05]);
trial.play_delay = uicontrol(trial.fig,...
    'style','slider',...
    'Value',0.5,...
    'sliderstep',[0.5 0.5],...
    'units','normalized',...
    'visible',visiblestr,...
    'position',[0.75 0.05 0.2 0.05]);

set(trial.fig,'HandleVisibility','on');
trial.progressbar_ax = axes('position',[0.05 0.01 0.9 0.02]);
set(trial.progressbar_ax,...
    'units','normalized',...
    'ytick',[],...
    'xtick',[],...
    'xlim', [0 1],...
    'ylim', [0 1],...
    'color',[0.2 0.2 0.2]);
axes(trial.progressbar_ax);
trial.progressbar = rectangle('position',[0 0 0.001 1]);
set(trial.progressbar,'facecolor',[0.5 0.5 0.6]);
set(trial.fig,'HandleVisibility','callback','visible',visiblestr);

% Flag that stores whether a trial is currently running.
trial.started = 0;

% Store the handle information
set(trial.fig,'userdata',trial);

% Set the figure callback function for keypresses
set(trial.fig,'keypressfcn',sprintf('pi_trialcb(''keypress'');'));
